---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-end
  labels:
    tags.datadoghq.com/env: DEP
    tags.datadoghq.com/service: Front-End-Service
    tags.datadoghq.com/version: "1"
    app: santatellme
  namespace: develop
spec:
  replicas: 1
  selector:
    matchLabels:
      name: front-end
  template:
    metadata:
      labels:
        name: front-end
        tags.datadoghq.com/env: DEP
        tags.datadoghq.com/service: Front-End-Service
        tags.datadoghq.com/version: "1"
        app: santatellme
      annotations:
        ad.datadoghq.com/front-end.logs: '[{"source":"front-end","service":"santatellme"}]'
    spec:
      containers:
      - name: front-end
        image: 009543462659.dkr.ecr.ap-northeast-2.amazonaws.com/front-end:3.02
        resources:
          limits:
            cpu: 300m
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 300Mi
        ports:
        - containerPort: 8079
        env:
        - name: SESSION_REDIS
          value: "true"
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        - name: DD_LOGS_INJECTION
          value: "true"
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
              - all
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /
            port: 8079
          initialDelaySeconds: 300
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /
            port: 8079
          initialDelaySeconds: 30
          periodSeconds: 3
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: front-end
  annotations:
        prometheus.io/scrape: 'true'
  labels:
    name: front-end
  namespace: develop

spec:
  type: NodePort
  ports:
  - port: 443
    targetPort: 8079
    nodePort: 30003
  selector:
    name: front-end
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: front-ingress

  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/enable-http2: 'true'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:009543462659:certificate/cbf10072-d1a0-4d97-b8bf-beb04af488ab
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
  namespace: develop
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: front-end
            port:
             number: 443

---
